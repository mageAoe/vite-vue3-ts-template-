// .commitlintrc.js
/** @type {import('cz-git').UserConfig} */
module.exports = {
  rules: {
    // @see: https://commitlint.js.org/#/reference-rules
  },
  prompt: {
    alias: { fd: 'docs: fix typos' },
    messages: {
      type: 'Select the type of change that you\'re committing:',
      scope: 'Denote the SCOPE of this change (optional):',
      customScope: 'Denote the SCOPE of this change:',
      subject: 'Write a SHORT, IMPERATIVE tense description of the change:\n',
      body: 'Provide a LONGER description of the change (optional). Use "|" to break new line:\n',
      breaking: 'List any BREAKING CHANGES (optional). Use "|" to break new line:\n',
      footerPrefixesSelect: 'Select the ISSUES type of changeList by this change (optional):',
      customFooterPrefix: 'Input ISSUES prefix:',
      footer: 'List any ISSUES by this change. E.g.: #31, #34:\n',
      generatingByAI: 'Generating your AI commit subject...',
      generatedSelectByAI: 'Select suitable subject by AI generated:',
      confirmCommit: 'Are you sure you want to proceed with the commit above?'
    },
    types: [
      // { value: 'feat', name: 'feat:     A new feature', emoji: ':sparkles:' },
      // { value: 'fix', name: 'fix:      A bug fix', emoji: ':bug:' },
      // { value: 'docs', name: 'docs:     Documentation only changes', emoji: ':memo:' },
      // { value: 'style', name: 'style:    Changes that do not affect the meaning of the code', emoji: ':lipstick:' },
      // { value: 'refactor', name: 'refactor: A code change that neither fixes a bug nor adds a feature', emoji: ':recycle:' },
      // { value: 'perf', name: 'perf:     A code change that improves performance', emoji: ':zap:' },
      // { value: 'test', name: 'test:     Adding missing tests or correcting existing tests', emoji: ':white_check_mark:' },
      // { value: 'build', name: 'build:    Changes that affect the build system or external dependencies', emoji: ':package:' },
      // { value: 'ci', name: 'ci:       Changes to our CI configuration files and scripts', emoji: ':ferris_wheel:' },
      // { value: 'chore', name: 'chore:    Other changes that don\'t modify src or test files', emoji: ':hammer:' },
      // { value: 'revert', name: 'revert:   Reverts a previous commit', emoji: ':rewind:' }
      {value: ':sparkles: feat',name: '✨ feat:  新功能'},
      {value: ':bug: fix',name: '🐛 fix:  修复'},
      {value: ':memo: docs',name: '📝 docs:  文档变更'},
      {value: ':lipstick: style',name: '💄 style: 代码格式(不影响代码运行的变动)'},
      {value: ':recycle: refactor',name: '♻️  refactor:  重构 (既不增加feature, 也不是修复bug)'},
      {value: ':zap: perf',name: '⚡️ perf:  性能优化'},
      {value: ':white_check_mark: test',name: '✅ test:  增加测试'},
      {value: ':wrench: chore',name: '🔧 chore: 构建过程或辅助工具的变动'},
      {value: ':rewind: revert',name: '⏪ revert: 回退'},
      {value: ':rocket: build',name: '🚀 build: 打包'}
    ],
    useEmoji: false,
    emojiAlign: 'center',
    useAI: false,
    aiNumber: 1,
    themeColorCode: '',
    scopes: [],
    allowCustomScopes: true,
    allowEmptyScopes: true,
    customScopesAlign: 'bottom',
    customScopesAlias: 'custom',
    emptyScopesAlias: 'empty',
    upperCaseSubject: false,
    markBreakingChangeMode: false,
    allowBreakingChanges: ['feat', 'fix'],
    breaklineNumber: 100,
    breaklineChar: '|',
    skipQuestions: [],
    issuePrefixes: [{ value: 'closed', name: 'closed:   ISSUES has been processed' }],
    customIssuePrefixAlign: 'top',
    emptyIssuePrefixAlias: 'skip',
    customIssuePrefixAlias: 'custom',
    allowCustomIssuePrefix: true,
    allowEmptyIssuePrefix: true,
    confirmColorize: true,
    maxHeaderLength: Infinity,
    maxSubjectLength: Infinity,
    minSubjectLength: 0,
    scopeOverrides: undefined,
    defaultBody: '',
    defaultIssues: '',
    defaultScope: '',
    defaultSubject: ''
  }
}
